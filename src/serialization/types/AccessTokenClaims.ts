/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Tesseral from "../../api/index";
import * as core from "../../core";
import { AccessTokenOrganization } from "./AccessTokenOrganization";
import { AccessTokenUser } from "./AccessTokenUser";
import { AccessTokenSession } from "./AccessTokenSession";
import { AccessTokenImpersonator } from "./AccessTokenImpersonator";

export const AccessTokenClaims: core.serialization.ObjectSchema<
    serializers.AccessTokenClaims.Raw,
    Tesseral.AccessTokenClaims
> = core.serialization.object({
    iss: core.serialization.string(),
    sub: core.serialization.string(),
    aud: core.serialization.string(),
    exp: core.serialization.number(),
    nbf: core.serialization.number(),
    iat: core.serialization.number(),
    actions: core.serialization.list(core.serialization.string()).optional(),
    organization: AccessTokenOrganization,
    user: AccessTokenUser,
    session: AccessTokenSession,
    impersonator: AccessTokenImpersonator.optional(),
});

export declare namespace AccessTokenClaims {
    export interface Raw {
        iss: string;
        sub: string;
        aud: string;
        exp: number;
        nbf: number;
        iat: number;
        actions?: string[] | null;
        organization: AccessTokenOrganization.Raw;
        user: AccessTokenUser.Raw;
        session: AccessTokenSession.Raw;
        impersonator?: AccessTokenImpersonator.Raw | null;
    }
}
